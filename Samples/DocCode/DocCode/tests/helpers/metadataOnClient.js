/********************************************************** 
 * Example of defining metadata on the client in JavaScript
 * Used by metadataTests.js
 **********************************************************/
(function (testFns) {
    "use strict";

    // Convenience variables

    var DT = breeze.DataType;
    var Identity = breeze.AutoGeneratedKeyType.Identity;
    var Validator = breeze.Validator;
    var camelCaseConvention = breeze.NamingConvention.camelCase;

    var northwindNamespace = "Northwind.Models";
    var northwindDtoNamespace = "Northwind.DtoModels";

    testFns.metadataOnClient = {
        createDtoMetadataStore: createDtoMetadataStore,

        addCategoryType        : addCategoryType,
        addLocationComplexType : addLocationComplexType,
        addProductType         : addProductType, 
        addSupplierType        : addSupplierType,

        createProductMetadataStore: createProductMetadataStore,

        addCustomerDtoType    : addCustomerDtoType,   
        addOrderDtoType       : addOrderDtoType,      
        addOrderDetailDtoType : addOrderDetailDtoType,
        addProductDtoType     : addProductDtoType    
    };


    // Creates a metadataStore with Northwind Product entity types:
    // Product, Category, Supplier
    function createProductMetadataStore() {
        var store = new breeze.MetadataStore({
            namingConvention: camelCaseConvention
        });


        // Add them in alphabetical order ... because we can
        addCategoryType(store);
        addProductType(store);
        addSupplierType(store);
        
        addNorthwindDataService(store);

        return store;
    }

    //#region Category
    // A simple reference type
    function addCategoryType(store) {
        var et = {
            shortName: "Category",
            namespace: northwindNamespace,
            autoGeneratedKeyType: Identity, // default is None
            defaultResourceName: "Categories",
            
            dataProperties: {
                categoryID:   { dataType: DT.Int32, isPartOfKey: true },
                categoryName: { maxLength: 4000 }, // DT.String is the default type
                description:  { maxLength: 4000 },
                picture:      { dataType: DT.Binary, maxLength: 4000},
                rowVersion:   { dataType: DT.Int32, isNullable: false },
            },

            navigationProperties: {
                products: {
                    entityTypeName: "Product",
                    isScalar: false,
                    associationName: "Product_Category",
                    invForeignKeyNames: ["categoryID"] // in server def; shouldn't be necessary?
                }
            }
        };

        return et = addEntityTypeToStore(store, et);
    }
    //#endregion

    //#region Location ComplexType
    function addLocationComplexType(store) {
        var et = {
            shortName: "Location",
            namespace: northwindNamespace,
            isComplexType: true,

            dataProperties: {
                address:    { maxLength: 60 },
                city:       { maxLength: 15 },
                region:     { maxLength: 15 },
                postalCode: { maxLength: 10 },
                country:    { maxLength: 15 },
            }
        };

        return et = addEntityTypeToStore(store, et);
    }

    //#endregion

    //#region Product
    function addProductType(store) {
        var et = {
            shortName: "Product",
            namespace: northwindNamespace,
            autoGeneratedKeyType: Identity, 
            defaultResourceName: "Products",

            dataProperties: {
                productID:       { dataType: DT.Int32, isPartOfKey: true },
                productName:     { maxLength: 40 },
                supplierID:      { dataType: DT.Int32} ,
                categoryID:      { dataType: DT.Int32 },
                quantityPerUnit: { maxLength: 4000 },
                unitPrice:       { dataType: DT.Decimal },
                unitsInStock:    { dataType: DT.Int16 },
                unitsOnOrder:    { dataType: DT.Int16 },
                reorderLevel:    { dataType: DT.Int16 },
                discontinued:    { dataType: DT.Boolean, isNullable: false },
                discontinuedDate:{ dataType: DT.DateTime },
                rowVersion:      { dataType: DT.Int32, isNullable: false },
            },

            navigationProperties: {
                category: {
                    entityTypeName: "Category",
                    associationName: "Product_Category",
                    foreignKeyNames: ["categoryID"] 
                },
                supplier: {
                    entityTypeName: "Supplier",
                    associationName: "Product_Supplier",
                    foreignKeyNames: ["supplierID"] 
                },
            }
        };

        return et = addEntityTypeToStore(store, et);
    }
    //#endregion

    //#region Supplier
    // Another simple reference type
    function addSupplierType(store) {
        var et = {
            shortName: "Supplier",
            namespace: northwindNamespace,
            autoGeneratedKeyType: Identity, 
            defaultResourceName: "Suppliers",

            dataProperties: {
                supplierID:   { dataType: DT.Int32, isPartOfKey: true },
                companyName:  { maxLength: 40, isNullable: false },
                contactName:  { maxLength: 30 },
                contactTitle: { maxLength: 30 },
                location:     { complexTypeName: "Location", isNullable: false},
                /* if didn't have Location Complex Type
                address:      { maxLength: 60 },
                city:         { maxLength: 15 },
                region:       { maxLength: 15 },
                postalCode:   { maxLength: 10 },
                country:      { maxLength: 15 },
                */
                phone:        { maxLength: 24 },
                fax:          { maxLength: 24 },
                homePage:     { maxLength: 4000 },
                rowVersion:   { dataType: DT.Int32, isNullable: false },
            },

            navigationProperties: {
                products: {
                    entityTypeName: "Product",
                    isScalar: false,
                    associationName: "Product_Supplier",
                    invForeignKeyNames: ["supplierID"] // in server def; shouldn't be necessary?
                }
            }
        };

        return et = addEntityTypeToStore(store, et);
    }
    //#endregion


    // Creates a metadataStore with NorthwindDto entity types:
    // Customer, Order, OrderDetail, Product
    function createDtoMetadataStore() {
        var store = new breeze.MetadataStore({
            namingConvention: camelCaseConvention
        });


        // Add them in alphabetical order ... because we can
        addCustomerDtoType(store);
        addOrderDtoType(store);
        addOrderDetailDtoType(store);
        addProductDtoType(store);

        store.addDataService(
                new breeze.DataService({ serviceName: testFns.northwindDtoServiceName })
        );

        return store;
    }

    //#region CustomerDto
    function addCustomerDtoType(store) {
        var et = {
            shortName: "Customer",
            namespace: northwindDtoNamespace,
            defaultResourceName: "Customers",

            dataProperties: {
                customerID:  { dataType: DT.Guid, isPartOfKey: true },
                companyName: { isNullable: false, maxLength: 40 },
            },

            navigationProperties: {
                orders: {
                    entityTypeName: "Order",
                    isScalar: false,
                    associationName: "Order_Customer",
                    invForeignKeyNames: ["customerID"] // in server def; shouldn't be necessary
                }
            }
        };

        return et = addEntityTypeToStore(store, et);
    }

    //#endregion

    //#region OrderDto
    function addOrderDtoType(store) {
        var et = {
            shortName: "Order",
            namespace: northwindDtoNamespace,
            autoGeneratedKeyType: Identity,
            defaultResourceName: "Orders",

            dataProperties: {
                orderID:      { dataType: DT.Int32, isPartOfKey: true },
                customerID:   { dataType: DT.Guid },
                orderDate:    { dataType: DT.DateTime },
                requiredDate: { dataType: DT.DateTime }, 
                shippedDate:  { dataType: DT.DateTime },
                freight:      { dataType: DT.Decimal },
                rowVersion:   { dataType: DT.Int32, isNullable: false }
            },

            navigationProperties: {
                customer: {
                    entityTypeName: "Customer",
                    associationName: "Order_Customer",
                    foreignKeyNames: ["customerID"] 
                },
                orderDetails: {
                    entityTypeName: "OrderDetail",
                    isScalar: false,
                    associationName: "OrderDetail_Order",
                    invForeignKeyNames: ["orderID"] // in server def; shouldn't be necessary
                }
            }
        };

        return et = addEntityTypeToStore(store, et);
    }

    //#endregion

    //#region OrderDetailDto
    function addOrderDetailDtoType(store) {
        var et = {
            shortName: "OrderDetail",
            namespace: northwindDtoNamespace,
            defaultResourceName: "OrderDetails",

            dataProperties: {
                orderID:    { dataType: DT.Int32, isPartOfKey: true },
                productID:  { dataType: DT.Int32, isPartOfKey: true },

                unitPrice:  { dataType: DT.Decimal, isNullable: false },
                quantity:   { dataType: DT.Int16, isNullable: false },
                discount:   { dataType: DT.Single, isNullable: false },
                rowVersion: { dataType: DT.Int32, isNullable: false }
            },

            navigationProperties: {
                order: {
                    entityTypeName: "Order",
                    associationName: "OrderDetail_Order",
                    foreignKeyNames: ["orderID"]
                },
                product: {
                    entityTypeName: "Product",
                    associationName: "OrderDetail_Product", // not needed but server version has it
                    foreignKeyNames: ["productID"]
                }

            }
        };

        return et = addEntityTypeToStore(store, et);
    }

    //#endregion

    //#region ProductDto
    function addProductDtoType(store) {
        var et = {
            shortName: "Product",
            namespace: northwindDtoNamespace,
            autoGeneratedKeyType: Identity,
            defaultResourceName: "Products",

            dataProperties: {
                productID: { dataType: DT.Int32, isPartOfKey: true },
                productName: { maxLength: 40, isNullable: false },
            },

        };

        return et = addEntityTypeToStore(store, et);
    }
    //#endregion


    //#region Helper methods 

    // Adds the entityType to the store
    // fixes some defaults
    // infers certain validators
    // adds type's "shortname" as a resource name
    function addEntityTypeToStore(store, entityTypeDef) {
        patchDefaults(entityTypeDef);
        var entityType = new breeze.EntityType(entityTypeDef);
        store.addEntityType(entityType);
        inferValidators(entityType);

        // Often useful to use the type name as the resource name in a cache query.
        // This name adds the type's 'shortName' as one of the resource names for the type.
        // Theoretically two types in different models could have the same 'shortName'
        // and thus we would associate the same resource name with the two different types.
        // While unlikely, breeze should offer a way to remove a resource name for a type.
        if (!entityType.isComplexType && !entityType.isAbstract) {
            store.setEntityTypeForResourceName(entityType.shortName, entityType);
        }

        return entityType;
    }

    function addNorthwindDataService(store) {
        store.addDataService(
                new breeze.DataService({ serviceName: testFns.northwindServiceName })
        );
    }

    // Patch some defaults in the entityType definition object
    // Todo: consider moving these patches into breeze itself
    function patchDefaults(entityTypeDef) {
        var entityNamespace = entityTypeDef.namespace;
        var dps = entityTypeDef.dataProperties;
        for (var key in dps) {
            if (_hasOwnProperty(dps, key)) {
                var prop = dps[key];
                // assume key part is non-nullable ... unless explicitly declared nullable (when is that good?)
                prop.isNullable = prop.isNullable == null ? !prop.isPartOfKey : !!prop.isNullable;

                if (prop.complexTypeName && prop.complexTypeName.indexOf(":#") === -1) {
                    // if complexTypeName is unqualified, suffix with the entity's own namespace
                    prop.complexTypeName += ':#' + entityNamespace;
                }
            }
        };
        
        var navs = entityTypeDef.navigationProperties;
        for (var key in navs) {
            if (_hasOwnProperty(navs, key)) {
                var prop = navs[key];

                // Todo: Breeze should have an 'isScaler' default as it does for data properties
                // As with DPs, assume a navigation property is scaler unless told otherwise
                // Should be fixed as of breeze v.1.4.6 ... can then remove next line and this comment
                //prop.isScalar = prop.isScalar !== false;
                var entityTypeName = prop.entityTypeName;

                if (entityTypeName.indexOf(":#") === -1) {
                    // if name is unqualified, suffix with the entity's own namespace
                    prop.entityTypeName += ':#' + entityNamespace;
                }
            }
        };
    }

    function _hasOwnProperty(obj, key) {
        return Object.prototype.hasOwnProperty.call(obj, key)
    }

    function inferValidators(entityType) {

        entityType.dataProperties.forEach(function (prop) {
            if (!prop.isNullable) { // is required. 
                addValidator(prop, Validator.required());
            };

            addValidator(prop, getDataTypeValidator(prop));

            if (prop.maxLength != null && prop.dataType === DT.String) {
                addValidator(prop, Validator.maxLength({ maxLength: prop.maxLength }));
            }

        });

        return entityType;

        function addValidator(prop, validator) {
            if (!validator) { return; } // no validator arg
            var valName = validator.name;
            var validators = prop.validators;
            var found = validators.filter(function (val) { return val.name == valName; })
            if (!found.length) { // this validator has not already been specified
                validators.push(validator);
            }
        }

        function getDataTypeValidator(prop) {
            var dataType = prop.dataType;
            var validatorCtor = !dataType || dataType === DT.String ? null : dataType.validatorCtor;
            return validatorCtor ? validatorCtor() : null;
        }
    }

    //#endregion

})(docCode.testFns);


//#region Imagining a DSL 

/**** Imagining a possible future DSL ****** 
// automatically infers validators

var et = ET("Category").ns(namespace).identityKeyed()
                       .resourceNames("Categories");

et.withProperties(
    DP("categoryID").i32().key().notNull(),
    DP("categoryName").maxLength(4000),
    DP("description").maxLength(4000),
    DP("picture").binary.maxLength(4000),
    DP("rowVersion").i32().notNull());

et.has("products").of("Product").inAssociation("Product_Category");

return et;

************/
//#endregion

//#region Original serialized northwind metadata

/*********************************
 * Serialized northwind metadata, the result of executing
 * metadataStore.exportMetadata()
 * The basis for the hand-rolled metadata earlier in this file
 *********************************

"{
  "metadataVersion": "1.0.5",
  "namingConvention": "noChange",
  "localQueryComparisonOptions": "caseInsensitiveSQL",
  "dataServices": [
    {
      "serviceName": "breeze/Northwind/",
      "hasServerMetadata": true,
      "jsonResultsAdapter": "webApi_default",
      "useJsonp": false
    }
  ],
  "structuralTypes": [
    {
      "shortName": "Category",
      "namespace": "Northwind.Models",
      "autoGeneratedKeyType": "Identity",
      "defaultResourceName": "Categories",
      "dataProperties": [
        {
          "name": "CategoryID",
          "dataType": "Int32",
          "isNullable": false,
          "defaultValue": 0,
          "isPartOfKey": true,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int32"
            }
          ]
        },
        {
          "name": "CategoryName",
          "dataType": "String",
          "maxLength": 4000,
          "validators": [
            {
              "maxLength": 4000,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "Description",
          "dataType": "String",
          "maxLength": 4000,
          "validators": [
            {
              "maxLength": 4000,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "Picture",
          "dataType": "Binary",
          "maxLength": 4000,
          "validators": [
            {
              "name": "none"
            }
          ]
        },
        {
          "name": "RowVersion",
          "dataType": "Int32",
          "isNullable": false,
          "defaultValue": 0,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int32"
            }
          ]
        }
      ],
      "navigationProperties": [
        {
          "name": "Products",
          "entityTypeName": "Product:#Northwind.Models",
          "isScalar": false,
          "associationName": "Product_Category",
          "invForeignKeyNames": [
            "CategoryID"
          ]
        }
      ]
    },
    {
      "shortName": "Product",
      "namespace": "Northwind.Models",
      "autoGeneratedKeyType": "Identity",
      "defaultResourceName": "Products",
      "dataProperties": [
        {
          "name": "ProductID",
          "dataType": "Int32",
          "isNullable": false,
          "defaultValue": 0,
          "isPartOfKey": true,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int32"
            }
          ]
        },
        {
          "name": "ProductName",
          "dataType": "String",
          "maxLength": 40,
          "validators": [
            {
              "maxLength": 40,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "SupplierID",
          "dataType": "Int32",
          "validators": [
            {
              "name": "int32"
            }
          ]
        },
        {
          "name": "CategoryID",
          "dataType": "Int32",
          "validators": [
            {
              "name": "int32"
            }
          ]
        },
        {
          "name": "QuantityPerUnit",
          "dataType": "String",
          "maxLength": 4000,
          "validators": [
            {
              "maxLength": 4000,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "UnitPrice",
          "dataType": "Decimal",
          "validators": [
            {
              "name": "number"
            }
          ]
        },
        {
          "name": "UnitsInStock",
          "dataType": "Int16",
          "validators": [
            {
              "name": "int16"
            }
          ]
        },
        {
          "name": "UnitsOnOrder",
          "dataType": "Int16",
          "validators": [
            {
              "name": "int16"
            }
          ]
        },
        {
          "name": "ReorderLevel",
          "dataType": "Int16",
          "validators": [
            {
              "name": "int16"
            }
          ]
        },
        {
          "name": "Discontinued",
          "dataType": "Boolean",
          "isNullable": false,
          "defaultValue": false,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "bool"
            }
          ]
        },
        {
          "name": "DiscontinuedDate",
          "dataType": "DateTime",
          "validators": [
            {
              "name": "date"
            }
          ]
        },
        {
          "name": "RowVersion",
          "dataType": "Int32",
          "isNullable": false,
          "defaultValue": 0,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int32"
            }
          ]
        }
      ],
      "navigationProperties": [
        {
          "name": "Category",
          "entityTypeName": "Category:#Northwind.Models",
          "isScalar": true,
          "associationName": "Product_Category",
          "foreignKeyNames": [
            "CategoryID"
          ]
        },
        {
          "name": "Supplier",
          "entityTypeName": "Supplier:#Northwind.Models",
          "isScalar": true,
          "associationName": "Product_Supplier",
          "foreignKeyNames": [
            "SupplierID"
          ]
        }
      ]
    },
    {
      "shortName": "Supplier",
      "namespace": "Northwind.Models",
      "autoGeneratedKeyType": "Identity",
      "defaultResourceName": "Suppliers",
      "dataProperties": [
        {
          "name": "SupplierID",
          "dataType": "Int32",
          "isNullable": false,
          "defaultValue": 0,
          "isPartOfKey": true,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int32"
            }
          ]
        },
        {
          "name": "CompanyName",
          "dataType": "String",
          "isNullable": false,
          "defaultValue": "",
          "maxLength": 40,
          "validators": [
            {
              "name": "required"
            },
            {
              "maxLength": 40,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "ContactName",
          "dataType": "String",
          "maxLength": 30,
          "validators": [
            {
              "maxLength": 30,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "ContactTitle",
          "dataType": "String",
          "maxLength": 30,
          "validators": [
            {
              "maxLength": 30,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "Address",
          "dataType": "String",
          "maxLength": 60,
          "validators": [
            {
              "maxLength": 60,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "City",
          "dataType": "String",
          "maxLength": 15,
          "validators": [
            {
              "maxLength": 15,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "Region",
          "dataType": "String",
          "maxLength": 15,
          "validators": [
            {
              "maxLength": 15,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "PostalCode",
          "dataType": "String",
          "maxLength": 10,
          "validators": [
            {
              "maxLength": 10,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "Country",
          "dataType": "String",
          "maxLength": 15,
          "validators": [
            {
              "maxLength": 15,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "Phone",
          "dataType": "String",
          "maxLength": 24,
          "validators": [
            {
              "maxLength": 24,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "Fax",
          "dataType": "String",
          "maxLength": 24,
          "validators": [
            {
              "maxLength": 24,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "HomePage",
          "dataType": "String",
          "maxLength": 4000,
          "validators": [
            {
              "maxLength": 4000,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "RowVersion",
          "dataType": "Int32",
          "isNullable": false,
          "defaultValue": 0,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int32"
            }
          ]
        }
      ],
      "navigationProperties": [
        {
          "name": "Products",
          "entityTypeName": "Product:#Northwind.Models",
          "isScalar": false,
          "associationName": "Product_Supplier",
          "invForeignKeyNames": [
            "SupplierID"
          ]
        }
      ]
    },
    {
      "shortName": "Customer",
      "namespace": "Northwind.Models",
      "autoGeneratedKeyType": "None",
      "defaultResourceName": "Customers",
      "dataProperties": [
        {
          "name": "CustomerID",
          "dataType": "Guid",
          "isNullable": false,
          "defaultValue": "00000000-0000-0000-0000-000000000000",
          "isPartOfKey": true,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "guid"
            }
          ]
        },
        {
          "name": "CompanyName",
          "dataType": "String",
          "isNullable": false,
          "defaultValue": "",
          "maxLength": 40,
          "validators": [
            {
              "name": "required"
            },
            {
              "maxLength": 40,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "ContactName",
          "dataType": "String",
          "maxLength": 30,
          "validators": [
            {
              "maxLength": 30,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "ContactTitle",
          "dataType": "String",
          "maxLength": 30,
          "validators": [
            {
              "maxLength": 30,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "Address",
          "dataType": "String",
          "maxLength": 60,
          "validators": [
            {
              "maxLength": 60,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "City",
          "dataType": "String",
          "maxLength": 15,
          "validators": [
            {
              "maxLength": 15,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "Region",
          "dataType": "String",
          "maxLength": 15,
          "validators": [
            {
              "maxLength": 15,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "PostalCode",
          "dataType": "String",
          "maxLength": 10,
          "validators": [
            {
              "maxLength": 10,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "Country",
          "dataType": "String",
          "maxLength": 15,
          "validators": [
            {
              "maxLength": 15,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "Phone",
          "dataType": "String",
          "maxLength": 24,
          "validators": [
            {
              "maxLength": 24,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "Fax",
          "dataType": "String",
          "maxLength": 24,
          "validators": [
            {
              "maxLength": 24,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "RowVersion",
          "dataType": "Int32",
          "concurrencyMode": "Fixed",
          "validators": [
            {
              "name": "int32"
            }
          ]
        }
      ],
      "navigationProperties": [
        {
          "name": "Orders",
          "entityTypeName": "Order:#Northwind.Models",
          "isScalar": false,
          "associationName": "Order_Customer",
          "invForeignKeyNames": [
            "CustomerID"
          ]
        }
      ]
    },
    {
      "shortName": "Order",
      "namespace": "Northwind.Models",
      "autoGeneratedKeyType": "Identity",
      "defaultResourceName": "Orders",
      "dataProperties": [
        {
          "name": "OrderID",
          "dataType": "Int32",
          "isNullable": false,
          "defaultValue": 0,
          "isPartOfKey": true,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int32"
            }
          ]
        },
        {
          "name": "CustomerID",
          "dataType": "Guid",
          "validators": [
            {
              "name": "guid"
            }
          ]
        },
        {
          "name": "EmployeeID",
          "dataType": "Int32",
          "validators": [
            {
              "name": "int32"
            }
          ]
        },
        {
          "name": "OrderDate",
          "dataType": "DateTime",
          "validators": [
            {
              "name": "date"
            }
          ]
        },
        {
          "name": "RequiredDate",
          "dataType": "DateTime",
          "validators": [
            {
              "name": "date"
            }
          ]
        },
        {
          "name": "ShippedDate",
          "dataType": "DateTime",
          "validators": [
            {
              "name": "date"
            }
          ]
        },
        {
          "name": "Freight",
          "dataType": "Decimal",
          "validators": [
            {
              "name": "number"
            }
          ]
        },
        {
          "name": "ShipName",
          "dataType": "String",
          "maxLength": 40,
          "validators": [
            {
              "maxLength": 40,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "ShipAddress",
          "dataType": "String",
          "maxLength": 60,
          "validators": [
            {
              "maxLength": 60,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "ShipCity",
          "dataType": "String",
          "maxLength": 15,
          "validators": [
            {
              "maxLength": 15,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "ShipRegion",
          "dataType": "String",
          "maxLength": 15,
          "validators": [
            {
              "maxLength": 15,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "ShipPostalCode",
          "dataType": "String",
          "maxLength": 10,
          "validators": [
            {
              "maxLength": 10,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "ShipCountry",
          "dataType": "String",
          "maxLength": 15,
          "validators": [
            {
              "maxLength": 15,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "RowVersion",
          "dataType": "Int32",
          "isNullable": false,
          "defaultValue": 0,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int32"
            }
          ]
        }
      ],
      "navigationProperties": [
        {
          "name": "Customer",
          "entityTypeName": "Customer:#Northwind.Models",
          "isScalar": true,
          "associationName": "Order_Customer",
          "foreignKeyNames": [
            "CustomerID"
          ]
        },
        {
          "name": "Employee",
          "entityTypeName": "Employee:#Northwind.Models",
          "isScalar": true,
          "associationName": "Employee_Orders",
          "foreignKeyNames": [
            "EmployeeID"
          ]
        },
        {
          "name": "InternationalOrder",
          "entityTypeName": "InternationalOrder:#Northwind.Models",
          "isScalar": true,
          "associationName": "Order_InternationalOrder",
          "invForeignKeyNames": [
            "OrderID"
          ]
        },
        {
          "name": "OrderDetails",
          "entityTypeName": "OrderDetail:#Northwind.Models",
          "isScalar": false,
          "associationName": "OrderDetail_Order",
          "invForeignKeyNames": [
            "OrderID"
          ]
        }
      ]
    },
    {
      "shortName": "Employee",
      "namespace": "Northwind.Models",
      "autoGeneratedKeyType": "Identity",
      "defaultResourceName": "Employees",
      "dataProperties": [
        {
          "name": "EmployeeID",
          "dataType": "Int32",
          "isNullable": false,
          "defaultValue": 0,
          "isPartOfKey": true,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int32"
            }
          ]
        },
        {
          "name": "LastName",
          "dataType": "String",
          "isNullable": false,
          "defaultValue": "",
          "maxLength": 30,
          "validators": [
            {
              "name": "required"
            },
            {
              "maxLength": 30,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "FirstName",
          "dataType": "String",
          "isNullable": false,
          "defaultValue": "",
          "maxLength": 30,
          "validators": [
            {
              "name": "required"
            },
            {
              "maxLength": 30,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "Title",
          "dataType": "String",
          "maxLength": 30,
          "validators": [
            {
              "maxLength": 30,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "TitleOfCourtesy",
          "dataType": "String",
          "maxLength": 25,
          "validators": [
            {
              "maxLength": 25,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "BirthDate",
          "dataType": "DateTime",
          "validators": [
            {
              "name": "date"
            }
          ]
        },
        {
          "name": "HireDate",
          "dataType": "DateTime",
          "validators": [
            {
              "name": "date"
            }
          ]
        },
        {
          "name": "Address",
          "dataType": "String",
          "maxLength": 60,
          "validators": [
            {
              "maxLength": 60,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "City",
          "dataType": "String",
          "maxLength": 15,
          "validators": [
            {
              "maxLength": 15,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "Region",
          "dataType": "String",
          "maxLength": 15,
          "validators": [
            {
              "maxLength": 15,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "PostalCode",
          "dataType": "String",
          "maxLength": 10,
          "validators": [
            {
              "maxLength": 10,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "Country",
          "dataType": "String",
          "maxLength": 15,
          "validators": [
            {
              "maxLength": 15,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "HomePhone",
          "dataType": "String",
          "maxLength": 24,
          "validators": [
            {
              "maxLength": 24,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "Extension",
          "dataType": "String",
          "maxLength": 4,
          "validators": [
            {
              "maxLength": 4,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "Photo",
          "dataType": "Binary",
          "maxLength": 4000,
          "validators": [
            {
              "name": "none"
            }
          ]
        },
        {
          "name": "Notes",
          "dataType": "String",
          "maxLength": 4000,
          "validators": [
            {
              "maxLength": 4000,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "PhotoPath",
          "dataType": "String",
          "maxLength": 255,
          "validators": [
            {
              "maxLength": 255,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "ReportsToEmployeeID",
          "dataType": "Int32",
          "validators": [
            {
              "name": "int32"
            }
          ]
        },
        {
          "name": "RowVersion",
          "dataType": "Int32",
          "isNullable": false,
          "defaultValue": 0,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int32"
            }
          ]
        }
      ],
      "navigationProperties": [
        {
          "name": "DirectReports",
          "entityTypeName": "Employee:#Northwind.Models",
          "isScalar": false,
          "associationName": "Employee_DirectReports",
          "invForeignKeyNames": [
            "EmployeeID"
          ]
        },
        {
          "name": "EmployeeTerritories",
          "entityTypeName": "EmployeeTerritory:#Northwind.Models",
          "isScalar": false,
          "associationName": "Employee_EmployeeTerritories",
          "invForeignKeyNames": [
            "EmployeeID"
          ]
        },
        {
          "name": "Manager",
          "entityTypeName": "Employee:#Northwind.Models",
          "isScalar": true,
          "associationName": "Employee_DirectReports",
          "foreignKeyNames": [
            "ReportsToEmployeeID"
          ]
        },
        {
          "name": "Orders",
          "entityTypeName": "Order:#Northwind.Models",
          "isScalar": false,
          "associationName": "Employee_Orders",
          "invForeignKeyNames": [
            "EmployeeID"
          ]
        }
      ]
    },
    {
      "shortName": "EmployeeTerritory",
      "namespace": "Northwind.Models",
      "autoGeneratedKeyType": "Identity",
      "defaultResourceName": "EmployeeTerritories",
      "dataProperties": [
        {
          "name": "ID",
          "dataType": "Int32",
          "isNullable": false,
          "defaultValue": 0,
          "isPartOfKey": true,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int32"
            }
          ]
        },
        {
          "name": "EmployeeID",
          "dataType": "Int32",
          "isNullable": false,
          "defaultValue": 0,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int32"
            }
          ]
        },
        {
          "name": "TerritoryID",
          "dataType": "Int32",
          "isNullable": false,
          "defaultValue": 0,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int32"
            }
          ]
        },
        {
          "name": "RowVersion",
          "dataType": "Int32",
          "isNullable": false,
          "defaultValue": 0,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int32"
            }
          ]
        }
      ],
      "navigationProperties": [
        {
          "name": "Employee",
          "entityTypeName": "Employee:#Northwind.Models",
          "isScalar": true,
          "associationName": "Employee_EmployeeTerritories",
          "foreignKeyNames": [
            "EmployeeID"
          ]
        },
        {
          "name": "Territory",
          "entityTypeName": "Territory:#Northwind.Models",
          "isScalar": true,
          "associationName": "EmployeeTerritory_Territory",
          "foreignKeyNames": [
            "TerritoryID"
          ]
        }
      ]
    },
    {
      "shortName": "Territory",
      "namespace": "Northwind.Models",
      "autoGeneratedKeyType": "Identity",
      "defaultResourceName": "Territories",
      "dataProperties": [
        {
          "name": "TerritoryID",
          "dataType": "Int32",
          "isNullable": false,
          "defaultValue": 0,
          "isPartOfKey": true,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int32"
            }
          ]
        },
        {
          "name": "TerritoryDescription",
          "dataType": "String",
          "isNullable": false,
          "defaultValue": "",
          "maxLength": 50,
          "validators": [
            {
              "name": "required"
            },
            {
              "maxLength": 50,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "RegionID",
          "dataType": "Int32",
          "isNullable": false,
          "defaultValue": 0,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int32"
            }
          ]
        },
        {
          "name": "RowVersion",
          "dataType": "Int32",
          "isNullable": false,
          "defaultValue": 0,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int32"
            }
          ]
        }
      ],
      "navigationProperties": [
        {
          "name": "EmployeeTerritories",
          "entityTypeName": "EmployeeTerritory:#Northwind.Models",
          "isScalar": false,
          "associationName": "EmployeeTerritory_Territory",
          "invForeignKeyNames": [
            "TerritoryID"
          ]
        },
        {
          "name": "Region",
          "entityTypeName": "Region:#Northwind.Models",
          "isScalar": true,
          "associationName": "Region_Territories",
          "foreignKeyNames": [
            "RegionID"
          ]
        }
      ]
    },
    {
      "shortName": "Region",
      "namespace": "Northwind.Models",
      "autoGeneratedKeyType": "None",
      "defaultResourceName": "Regions",
      "dataProperties": [
        {
          "name": "RegionID",
          "dataType": "Int32",
          "isNullable": false,
          "defaultValue": 0,
          "isPartOfKey": true,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int32"
            }
          ]
        },
        {
          "name": "RegionDescription",
          "dataType": "String",
          "isNullable": false,
          "defaultValue": "",
          "maxLength": 50,
          "validators": [
            {
              "name": "required"
            },
            {
              "maxLength": 50,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "RowVersion",
          "dataType": "Int32",
          "isNullable": false,
          "defaultValue": 0,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int32"
            }
          ]
        }
      ],
      "navigationProperties": [
        {
          "name": "Territories",
          "entityTypeName": "Territory:#Northwind.Models",
          "isScalar": false,
          "associationName": "Region_Territories",
          "invForeignKeyNames": [
            "RegionID"
          ]
        }
      ]
    },
    {
      "shortName": "InternationalOrder",
      "namespace": "Northwind.Models",
      "autoGeneratedKeyType": "None",
      "defaultResourceName": "InternationalOrders",
      "dataProperties": [
        {
          "name": "OrderID",
          "dataType": "Int32",
          "isNullable": false,
          "defaultValue": 0,
          "isPartOfKey": true,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int32"
            }
          ]
        },
        {
          "name": "CustomsDescription",
          "dataType": "String",
          "maxLength": 100,
          "validators": [
            {
              "maxLength": 100,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "ExciseTax",
          "dataType": "Decimal",
          "isNullable": false,
          "defaultValue": 0,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "number"
            }
          ]
        },
        {
          "name": "RowVersion",
          "dataType": "Int32",
          "isNullable": false,
          "defaultValue": 0,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int32"
            }
          ]
        }
      ],
      "navigationProperties": [
        {
          "name": "Order",
          "entityTypeName": "Order:#Northwind.Models",
          "isScalar": true,
          "associationName": "Order_InternationalOrder",
          "foreignKeyNames": [
            "OrderID"
          ]
        }
      ]
    },
    {
      "shortName": "OrderDetail",
      "namespace": "Northwind.Models",
      "autoGeneratedKeyType": "None",
      "defaultResourceName": "OrderDetails",
      "dataProperties": [
        {
          "name": "OrderID",
          "dataType": "Int32",
          "isNullable": false,
          "defaultValue": 0,
          "isPartOfKey": true,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int32"
            }
          ]
        },
        {
          "name": "ProductID",
          "dataType": "Int32",
          "isNullable": false,
          "defaultValue": 0,
          "isPartOfKey": true,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int32"
            }
          ]
        },
        {
          "name": "UnitPrice",
          "dataType": "Decimal",
          "isNullable": false,
          "defaultValue": 0,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "number"
            }
          ]
        },
        {
          "name": "Quantity",
          "dataType": "Int16",
          "isNullable": false,
          "defaultValue": 0,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int16"
            }
          ]
        },
        {
          "name": "Discount",
          "dataType": "Single",
          "isNullable": false,
          "defaultValue": 0,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "number"
            }
          ]
        },
        {
          "name": "RowVersion",
          "dataType": "Int32",
          "isNullable": false,
          "defaultValue": 0,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int32"
            }
          ]
        }
      ],
      "navigationProperties": [
        {
          "name": "Order",
          "entityTypeName": "Order:#Northwind.Models",
          "isScalar": true,
          "associationName": "OrderDetail_Order",
          "foreignKeyNames": [
            "OrderID"
          ]
        },
        {
          "name": "Product",
          "entityTypeName": "Product:#Northwind.Models",
          "isScalar": true,
          "associationName": "OrderDetail_Product",
          "foreignKeyNames": [
            "ProductID"
          ]
        }
      ]
    },
    {
      "shortName": "PreviousEmployee",
      "namespace": "Northwind.Models",
      "autoGeneratedKeyType": "None",
      "defaultResourceName": "PreviousEmployees",
      "dataProperties": [
        {
          "name": "EmployeeID",
          "dataType": "Int32",
          "isNullable": false,
          "defaultValue": 0,
          "isPartOfKey": true,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int32"
            }
          ]
        },
        {
          "name": "LastName",
          "dataType": "String",
          "isNullable": false,
          "defaultValue": "",
          "maxLength": 30,
          "validators": [
            {
              "name": "required"
            },
            {
              "maxLength": 30,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "FirstName",
          "dataType": "String",
          "isNullable": false,
          "defaultValue": "",
          "maxLength": 30,
          "validators": [
            {
              "name": "required"
            },
            {
              "maxLength": 30,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "Title",
          "dataType": "String",
          "maxLength": 30,
          "validators": [
            {
              "maxLength": 30,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "TitleOfCourtesy",
          "dataType": "String",
          "maxLength": 25,
          "validators": [
            {
              "maxLength": 25,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "BirthDate",
          "dataType": "DateTime",
          "validators": [
            {
              "name": "date"
            }
          ]
        },
        {
          "name": "HireDate",
          "dataType": "DateTime",
          "validators": [
            {
              "name": "date"
            }
          ]
        },
        {
          "name": "Address",
          "dataType": "String",
          "maxLength": 60,
          "validators": [
            {
              "maxLength": 60,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "City",
          "dataType": "String",
          "maxLength": 15,
          "validators": [
            {
              "maxLength": 15,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "Region",
          "dataType": "String",
          "maxLength": 15,
          "validators": [
            {
              "maxLength": 15,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "PostalCode",
          "dataType": "String",
          "maxLength": 10,
          "validators": [
            {
              "maxLength": 10,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "Country",
          "dataType": "String",
          "maxLength": 15,
          "validators": [
            {
              "maxLength": 15,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "HomePhone",
          "dataType": "String",
          "maxLength": 24,
          "validators": [
            {
              "maxLength": 24,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "Extension",
          "dataType": "String",
          "maxLength": 4,
          "validators": [
            {
              "maxLength": 4,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "Photo",
          "dataType": "Binary",
          "maxLength": 4000,
          "validators": [
            {
              "name": "none"
            }
          ]
        },
        {
          "name": "Notes",
          "dataType": "String",
          "maxLength": 4000,
          "validators": [
            {
              "maxLength": 4000,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "PhotoPath",
          "dataType": "String",
          "maxLength": 255,
          "validators": [
            {
              "maxLength": 255,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "ReportsToEmployeeID",
          "dataType": "Int32",
          "validators": [
            {
              "name": "int32"
            }
          ]
        },
        {
          "name": "RowVersion",
          "dataType": "Int32",
          "isNullable": false,
          "defaultValue": 0,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "int32"
            }
          ]
        }
      ]
    },
    {
      "shortName": "Role",
      "namespace": "Northwind.Models",
      "autoGeneratedKeyType": "Identity",
      "defaultResourceName": "Roles",
      "dataProperties": [
        {
          "name": "Id",
          "dataType": "Int64",
          "isNullable": false,
          "defaultValue": 0,
          "isPartOfKey": true,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "integer"
            }
          ]
        },
        {
          "name": "Name",
          "dataType": "String",
          "isNullable": false,
          "defaultValue": "",
          "maxLength": 50,
          "validators": [
            {
              "name": "required"
            },
            {
              "maxLength": 50,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "Description",
          "dataType": "String",
          "maxLength": 2000,
          "validators": [
            {
              "maxLength": 2000,
              "name": "maxLength"
            }
          ]
        }
      ],
      "navigationProperties": [
        {
          "name": "UserRoles",
          "entityTypeName": "UserRole:#Northwind.Models",
          "isScalar": false,
          "associationName": "Role_UserRoles",
          "invForeignKeyNames": [
            "Id"
          ]
        }
      ]
    },
    {
      "shortName": "UserRole",
      "namespace": "Northwind.Models",
      "autoGeneratedKeyType": "Identity",
      "defaultResourceName": "UserRoles",
      "dataProperties": [
        {
          "name": "ID",
          "dataType": "Int64",
          "isNullable": false,
          "defaultValue": 0,
          "isPartOfKey": true,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "integer"
            }
          ]
        },
        {
          "name": "UserId",
          "dataType": "Int64",
          "isNullable": false,
          "defaultValue": 0,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "integer"
            }
          ]
        },
        {
          "name": "RoleId",
          "dataType": "Int64",
          "isNullable": false,
          "defaultValue": 0,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "integer"
            }
          ]
        }
      ],
      "navigationProperties": [
        {
          "name": "Role",
          "entityTypeName": "Role:#Northwind.Models",
          "isScalar": true,
          "associationName": "Role_UserRoles",
          "foreignKeyNames": [
            "RoleId"
          ]
        },
        {
          "name": "User",
          "entityTypeName": "User:#Northwind.Models",
          "isScalar": true,
          "associationName": "UserRole_User",
          "foreignKeyNames": [
            "UserId"
          ]
        }
      ]
    },
    {
      "shortName": "User",
      "namespace": "Northwind.Models",
      "autoGeneratedKeyType": "Identity",
      "defaultResourceName": "Users",
      "dataProperties": [
        {
          "name": "Id",
          "dataType": "Int64",
          "isNullable": false,
          "defaultValue": 0,
          "isPartOfKey": true,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "integer"
            }
          ]
        },
        {
          "name": "UserName",
          "dataType": "String",
          "maxLength": 100,
          "validators": [
            {
              "maxLength": 100,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "UserPassword",
          "dataType": "String",
          "maxLength": 200,
          "validators": [
            {
              "maxLength": 200,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "FirstName",
          "dataType": "String",
          "maxLength": 100,
          "validators": [
            {
              "maxLength": 100,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "LastName",
          "dataType": "String",
          "maxLength": 100,
          "validators": [
            {
              "maxLength": 100,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "Email",
          "dataType": "String",
          "maxLength": 100,
          "validators": [
            {
              "maxLength": 100,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "RowVersion",
          "dataType": "Decimal",
          "isNullable": false,
          "defaultValue": 0,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "number"
            }
          ]
        },
        {
          "name": "CreatedBy",
          "dataType": "String",
          "maxLength": 100,
          "validators": [
            {
              "maxLength": 100,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "CreatedByUserId",
          "dataType": "Int64",
          "isNullable": false,
          "defaultValue": 0,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "integer"
            }
          ]
        },
        {
          "name": "CreatedDate",
          "dataType": "DateTime",
          "isNullable": false,
          "defaultValue": "1900-01-01T08:00:00.000Z",
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "date"
            }
          ]
        },
        {
          "name": "ModifiedBy",
          "dataType": "String",
          "maxLength": 100,
          "validators": [
            {
              "maxLength": 100,
              "name": "maxLength"
            }
          ]
        },
        {
          "name": "ModifiedByUserId",
          "dataType": "Int64",
          "isNullable": false,
          "defaultValue": 0,
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "integer"
            }
          ]
        },
        {
          "name": "ModifiedDate",
          "dataType": "DateTime",
          "isNullable": false,
          "defaultValue": "1900-01-01T08:00:00.000Z",
          "concurrencyMode": "Fixed",
          "validators": [
            {
              "name": "required"
            },
            {
              "name": "date"
            }
          ]
        }
      ],
      "navigationProperties": [
        {
          "name": "UserRoles",
          "entityTypeName": "UserRole:#Northwind.Models",
          "isScalar": false,
          "associationName": "UserRole_User",
          "invForeignKeyNames": [
            "Id"
          ]
        }
      ]
    }
  ],
  "resourceEntityTypeMap": {
    "Categories": "Category:#Northwind.Models",
    "Products": "Product:#Northwind.Models",
    "Suppliers": "Supplier:#Northwind.Models",
    "Customers": "Customer:#Northwind.Models",
    "Orders": "Order:#Northwind.Models",
    "Employees": "Employee:#Northwind.Models",
    "EmployeeTerritories": "EmployeeTerritory:#Northwind.Models",
    "Territories": "Territory:#Northwind.Models",
    "Regions": "Region:#Northwind.Models",
    "InternationalOrders": "InternationalOrder:#Northwind.Models",
    "OrderDetails": "OrderDetail:#Northwind.Models",
    "PreviousEmployees": "PreviousEmployee:#Northwind.Models",
    "Roles": "Role:#Northwind.Models",
    "UserRoles": "UserRole:#Northwind.Models",
    "Users": "User:#Northwind.Models"
  }
}"
**********************************/

//#endregion